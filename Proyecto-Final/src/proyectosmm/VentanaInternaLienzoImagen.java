package proyectosmm;

import SM.dic.graficos.AtrShape;
import SM.dic.graficos.ModoEditar;
import SM.dic.graficos.TipoDibujo;
import SM.dic.iu.LienzoImagen2D;

/**
 * Ventana que contiene una imagen abierta o un lienzo vacío sobre el que dibujar
 * @author David Infante Casas
 */
public class VentanaInternaLienzoImagen extends javax.swing.JInternalFrame implements VentanaInterna {

    /**
     * Frame desde el que se crea
     */
    private VentanaPrincipal parent = null;
    
    /**
     * Devuelve el tipo de VentanaInterna que es
     * @return Devuelve TipoVentanaInterna.LIENZO
     */
    @Override
    public TipoVentanaInterna getTipo() {
        return TipoVentanaInterna.LIENZO;
    }
    
    /**
     * Crea un nuevo VentanaInterna
     * @param parent Frame desde el que se crea
     */
    public VentanaInternaLienzoImagen(VentanaPrincipal parent) {
        initComponents();
        this.parent = parent;
    }

    /**
     * Devuelve el lienzoImagen2D contenido en este JInternalFrame
     * @return Devuelve el lienzoImagen2D contenido en este JInternalFrame
     */
    public LienzoImagen2D getLienzo() {
        return lienzoImagen2D;
    }
    
    /**
     * Escribe el nombre de las figuras existentes en el lienzo en el ComboBox listaFiguras de parent
     */
    public void setNombreFormas() {
        parent.listaFigurasClear();
        if (lienzoImagen2D.getvShape().size() > 0) {
            for (int i = 0; i < lienzoImagen2D.getvShape().size(); ++i) {
                parent.setListaFiguras(lienzoImagen2D.getNombreFigura(i));
            }
        }
    }

    /**
     * Hace setSelected(...) de los botones a partir de los atributos del lienzo seleccionado
     */
    public void setEstadoBotonesLienzo() {
        this.setNombreFormas();
        parent.setEstadoBotones(lienzoImagen2D.getTipoDibujo(), lienzoImagen2D.getModoEditar(),
                lienzoImagen2D.getAtributos().getColorTrazo(), lienzoImagen2D.getAtributos().getTamTrazo(), lienzoImagen2D.getAtributos().isTrazoDiscontinuo(),
                lienzoImagen2D.getIndice_tipoRelleno(), lienzoImagen2D.getAtributos().getColorRelleno(), lienzoImagen2D.getAtributos().getColorDegradado(),
                lienzoImagen2D.getAtributos().isAlisar(), lienzoImagen2D.getIndice_fuente(), lienzoImagen2D.getBrillo(), lienzoImagen2D.getAnguloRotacion());
    }

    /**
     * Hace setSelected(...) de los botones según la figura seleccionada en el lienzo
     * @param atrs Atributos de la figura según la que se van a activar los botones
     */
    public void setEstadoBotonesFigura(AtrShape atrs) {
        parent.setEstadoBotonesFigura(atrs.getAtributos().getColorTrazo(), atrs.getAtributos().getTamTrazo(),
                atrs.getAtributos().isTrazoDiscontinuo(), atrs.getAtributos().getTipoRelleno(), atrs.getAtributos().getColorRelleno(),
                atrs.getAtributos().getColorDegradado(), atrs.getAtributos().isAlisar());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane = new javax.swing.JScrollPane();
        lienzoImagen2D = new SM.dic.iu.LienzoImagen2D();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        getContentPane().setLayout(new javax.swing.OverlayLayout(getContentPane()));

        lienzoImagen2D.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                lienzoImagen2DMouseMoved(evt);
            }
        });
        lienzoImagen2D.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lienzoImagen2DMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lienzoImagen2DMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout lienzoImagen2DLayout = new javax.swing.GroupLayout(lienzoImagen2D);
        lienzoImagen2D.setLayout(lienzoImagen2DLayout);
        lienzoImagen2DLayout.setHorizontalGroup(
            lienzoImagen2DLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 387, Short.MAX_VALUE)
        );
        lienzoImagen2DLayout.setVerticalGroup(
            lienzoImagen2DLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 265, Short.MAX_VALUE)
        );

        jScrollPane.setViewportView(lienzoImagen2D);

        getContentPane().add(jScrollPane);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lienzoImagen2DMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lienzoImagen2DMouseMoved
        /**
         * Introduce los valores de las coordenadas en las que se encuentra el ratón en el lienzo
         */
        parent.setJLabelEstado(evt.getX(), evt.getY());
    }//GEN-LAST:event_lienzoImagen2DMouseMoved

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        this.setEstadoBotonesLienzo();
    }//GEN-LAST:event_formInternalFrameActivated

    private void lienzoImagen2DMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lienzoImagen2DMouseClicked
        /**
         * Hace el set de los botones si se selecciona una figura y selecciona dicha figura en la listaFiguras
         * También actualiza la lista
         */
        if (lienzoImagen2D.getModoEditar() == ModoEditar.SELECCIONAR && lienzoImagen2D.getFormaSeleccionada() != null
                && lienzoImagen2D.getTipoDibujo() == TipoDibujo.NULL) {
            this.setEstadoBotonesFigura(lienzoImagen2D.getFormaSeleccionada());
            parent.setSelectedItemListaFormas(lienzoImagen2D.getFormaSeleccionada().getNombre());
        }
        if (lienzoImagen2D.getTipoDibujo() != TipoDibujo.NULL) this.setNombreFormas();
    }//GEN-LAST:event_lienzoImagen2DMouseClicked

    private void lienzoImagen2DMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lienzoImagen2DMouseReleased
        /**
         * Actualiza la listaFiguras
         */
        if (lienzoImagen2D.getTipoDibujo() != TipoDibujo.NULL) this.setNombreFormas();
    }//GEN-LAST:event_lienzoImagen2DMouseReleased

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        this.setNombreFormas();
        parent.setSelectedItemListaFormas(lienzoImagen2D.getFormaSeleccionada().getNombre());
    }//GEN-LAST:event_formFocusGained


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane;
    private SM.dic.iu.LienzoImagen2D lienzoImagen2D;
    // End of variables declaration//GEN-END:variables
}
